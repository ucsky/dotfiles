name: CRDA Scan

on:
  # Enable the workflow to run on pull requests, manual dispatch, and workflow calls
  workflow_dispatch:

  pull_request_target:
    branches: [ "master" ]
    types: [ assigned, opened, synchronize, reopened, labeled, edited ]

permissions:
  contents: read            # Minimum permissions required to read repository contents
  pull-requests: write      # Required for pull_request_target to add labels or comments

jobs:
  crda-scan:
    permissions:
      contents: read            # For actions/checkout to fetch code
      security-events: write    # For redhat-actions/crda to upload SARIF results
    name: Scan project vulnerabilities with CRDA
    runs-on: ubuntu-20.04
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      # Install the required tool stack (e.g., Node.js, Python, etc.)
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Install CRDA CLI
      - name: Install CRDA CLI
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          source: github
          github_pat: ${{ secrets.GITHUB_TOKEN }}
          crda: "latest"

      # Run the CRDA scan
      - name: CRDA Scan
        id: scan
        uses: redhat-actions/crda@v1
        with:
          crda_key: ${{ secrets.CRDA_KEY }}  # Use CRDA_KEY or SNYK_TOKEN as required
          # snyk_token: ${{ secrets.SNYK_TOKEN }}
          # upload_artifact: false
