#!/bin/bash
# gitlfsdiff: Compare la version modifiée (non ajoutée) d'un fichier suivi par Git LFS
# avec la version dans HEAD (la branche de travail).
# Utilisation : gitlfsdiff <chemin_du_fichier>

set -e

if [ "$#" -ne 1 ]; then
    echo "Usage: $0 <chemin_du_fichier>"
    exit 1
fi

# Déterminer la racine du dépôt Git
REPO_ROOT=$(git rev-parse --show-toplevel)

# Normaliser le chemin du fichier
FILE_ABS=$(realpath "$1")
FILE_REL=$(realpath --relative-to="$REPO_ROOT" "$FILE_ABS")

# Vérifier que le fichier existe dans HEAD
if ! git ls-tree -r HEAD -- "$FILE_REL" > /dev/null 2>&1; then
    echo "Erreur : Le fichier '$FILE_REL' n'existe pas dans HEAD."
    exit 1
fi

# Vérifier que le fichier est suivi par Git LFS
if ! git lfs ls-files | grep -q "$FILE_REL"; then
    echo "Erreur : '$FILE_REL' n'est pas suivi par Git LFS."
    exit 1
fi

# Créer un fichier temporaire pour stocker la version HEAD
HEAD_TMP=$(mktemp)

# Récupérer le contenu du fichier dans HEAD et le passer par le filtre smudge pour obtenir le contenu réel
if ! git show HEAD:"$FILE_REL" | git lfs smudge > "$HEAD_TMP" 2>/dev/null; then
    echo "Erreur : Impossible de récupérer '$FILE_REL' depuis HEAD."
    rm -f "$HEAD_TMP"
    exit 1
fi

# Comparer la version HEAD (dans $HEAD_TMP) avec le fichier modifié du répertoire de travail ($FILE_ABS)
if file "$FILE_ABS" | grep -qi "text"; then
    echo "Fichier texte détecté. Différence unifiée :"
    diff -u "$HEAD_TMP" "$FILE_ABS"
else
    echo "Fichier binaire détecté. Différence hexadécimale :"
    diff <(xxd "$HEAD_TMP") <(xxd "$FILE_ABS")
fi

rm -f "$HEAD_TMP"
