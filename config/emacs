(if (not (package-installed-p 'use-package))
    ;; Install package automatically if not already installed.
    (progn
      (package-refresh-contents)
      (package-install 'use-package)))


;; Make tramp quicker with ssh
(setq tramp-default-method "ssh")


;; list the repositories containing them
;; see https://elpa.gnu.org
(add-to-list 'package-archives
             '("gnu" . "https://elpa.gnu.org/packages/")
             t)
;; see https://marmalade-repo.org
(add-to-list 'package-archives
             '("marmalade" . "http://marmalade-repo.org/packages/")
             t)
(add-to-list 'package-archives
             '("melpa-stable" . "https://stable.melpa.org/packages/") t)

;; activate all the packages (in particular autoloads)
(package-initialize)

;; ==========
;; | PYTHON |
;; ==========
;;
;; See https://www.emacswiki.org/emacs/PythonProgrammingInEmacs
;;
;;(use-package flycheck
;;  :ensure t
;;   :init (global-flycheck-mode))
;;
;;
;; = elpy =
;;
;; - Documentation: https://github.com/jorgenschaefer/elpy
;; - Repository: https://elpy.readthedocs.io/en/latest/introduction.html#installation
;;
;; For Ubuntu:
;; - sudo apt install elpa-elpy
;; - sudo apt install python3-jedi black autopep8 yapf
;;(elpy-enable)
(use-package elpy
  :ensure t
  :init
  (elpy-enable))
;;
;; Old elpy setup:
;;(setq package-list '(use-package elpy))
;;(use-package elpy
;;  :ensure t
;;  :defer t
;;  :init
;;  (advice-add 'python-mode :before 'elpy-enable))
;;
;; py-autopep8
;; (add-hook 'python-mode-hook 'py-autopep8-enable-on-save)
;; (setq py-autopep8-options '("--max-line-length=100"))
;; LSP JEDI
;;(use-package lsp-jedi
;;  :ensure t
;;  :config
;;  (with-eval-after-load "lsp-mode"
;;    (add-to-list 'lsp-disabled-clients 'pyls)
;;    (add-to-list 'lsp-enabled-clients 'jedi)))

;; Truncate long lines
(set-default 'truncate-lines t)

;; C-x <direction> to switch windows
(use-package window-jump
             :bind (("C-x <up>" . window-jump-up)
                    ("C-x <down>" . window-jump-down)
                    ("C-x <left>" . window-jump-left)
                    ("C-x <right>" . window-jump-right)))
